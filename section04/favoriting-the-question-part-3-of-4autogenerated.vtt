WEBVTT

0
00:04.160 --> 00:11.460
Now let's jump to our terminal and here before we 
create new seeder for favoriting the question

1
00:11.460 --> 00:16.460
let's create another seeder that will be hold our 
existing code in our database seeder file.

2
00:16.590 --> 00:19.820
So everything inside that file will be moved to this seeder

3
00:28.040 --> 00:38.210
and since the existing code is to generate fake users, 
questions and answers here I'll call it users users

4
00:38.750 --> 00:47.150
questions answers table seeder but of course feel free to call it with a you like.

5
00:53.610 --> 00:54.110
Now let's

6
00:54.140 --> 00:55.640
open database seeder file

7
00:59.990 --> 01:02.940
and here let's cut everything

8
01:06.760 --> 01:08.810
and then say this

9
01:08.930 --> 01:13.990
call here because what we call a multiple seeder files

10
01:14.140 --> 01:15.470
that's why we pass in an array

11
01:18.550 --> 01:32.440
and inside this we can specify the seeder class.

12
01:32.710 --> 01:36.160
All right let's open `UsersQuestionsAnswersTableSeeder`

13
01:44.300 --> 01:46.640
and paste those in this run method.

14
01:51.750 --> 01:55.550
and up here we can explicitly delete the records on users

15
01:55.710 --> 01:57.600
questions and answers tables like so

16
02:24.400 --> 02:26.050
this deletion command

17
02:26.080 --> 02:32.290
might not be unnecessary because we can run migrate:fresh 
command before we run all seeds as we did in

18
02:32.290 --> 02:34.010
other lessons on this course.

19
02:34.010 --> 02:39.860
But maybe for some reasons you don't want to call it 
or we want to run the seed individually then this

20
02:39.860 --> 02:42.820
deletion command will be helpful.

21
02:42.820 --> 02:47.020
And of course we need to execute these commands in reverse order.

22
02:49.340 --> 02:57.300
Here we create the user then questions and answers.

23
02:57.320 --> 03:02.500
So here if you want to delete the records on these tables then we need to do that in reverse order

24
03:02.750 --> 03:04.010
otherwise we'll find error

25
03:08.570 --> 03:15.180
now let's go back to our terminal and create the 
seeder for generating fake favorite question.

26
03:15.300 --> 03:30.280
php artisan make:seeder and then the name 
is going to be favorites table seeder

27
03:30.320 --> 03:32.570
All right let's open the favorites table seeder file

28
03:41.620 --> 03:41.890
Here

29
03:41.900 --> 03:57.970
let's import the namespace of the user and question model

30
03:58.570 --> 03:59.590
and then here

31
03:59.590 --> 04:14.020
Firstly we can delete the favorite table explicitly like so.

32
04:15.040 --> 04:22.360
Again we do this just to make sure we have no duplicate 
records when we run the seeder individually.

33
04:22.360 --> 04:24.550
Then we can get all users ids like so

34
04:33.250 --> 04:36.190
and assign them into a variable

35
04:40.850 --> 04:54.430
and then we can count all users and assign to another variable.

36
04:55.240 --> 05:01.360
Then we can iterate all questions using foreach loop.

37
05:09.020 --> 05:14.400
And inside here we can randomly attach 
every single question to at least one user.

38
05:14.690 --> 05:20.690
Or in other word we make every single question 
to be favorited by at least one user.

39
05:21.260 --> 05:22.550
We can achieve that like this

40
05:43.050 --> 05:44.200
inside this for loop

41
05:44.390 --> 05:46.070
firstly we get the random user

42
05:52.440 --> 05:56.180
and assign into another variable user in this case

43
05:58.970 --> 05:59.410
and last

44
05:59.480 --> 06:04.570
we can attach the current question to 
the random user like this question

45
06:05.500 --> 06:13.780
favorites attach user.

46
06:13.900 --> 06:23.380
So here we get all questions and then for a single question we randomly attach or make it to be favorited

47
06:23.710 --> 06:25.410
at least by one user.

48
06:25.450 --> 06:30.620
That's why here we place the attach 
method call inside for loop.

49
06:30.940 --> 06:35.010
And we start from zero to the total number of the users.

50
06:35.020 --> 06:43.030
This will make the question possibly be favorited 
by one user or even by all users.

51
06:43.030 --> 06:52.330
Now we can switch to database seeder file.

52
06:52.550 --> 06:57.850
And here we call out favorites table 
seeder file by specify the class here.

53
07:03.150 --> 07:07.730
So now we have two seeders and registered them 
in this database seeder file.

54
07:07.920 --> 07:09.030
We can save all changes

55
07:16.390 --> 07:24.480
and here we can run them by saying: php artisan 
db:seed  or if you want to run individual

56
07:24.530 --> 07:34.120
seed let's say you only want to run favorites table 
seeder then here you can specify class equals and then

57
07:34.120 --> 07:43.890
the seed class favorites table seeder.

58
07:44.000 --> 07:44.620
All right

59
07:44.690 --> 07:46.660
favorites table seeder has been run

60
07:46.790 --> 07:48.590
now let me open phpmyadmin

61
08:00.110 --> 08:07.200
as can see I have some records in these favorites table. 
But here you see that created at and updated at columns

62
08:07.200 --> 08:11.400
are empty so to fix that we can go to

63
08:12.010 --> 08:12.910
Question model

64
08:17.620 --> 08:30.020
and here you can chain the belongs to many with 
withTimestamps method called like this.

65
08:30.130 --> 08:33.970
Also we can do the same thing to favorites method in user model

66
08:44.840 --> 08:46.260
save all changes.

67
08:49.230 --> 08:56.560
And let's run our favorites table seeder again.

68
08:57.480 --> 08:59.070
Let me refresh this

69
08:59.070 --> 08:59.750
favorites table

70
09:03.720 --> 09:12.000
and now the created at and updated at column 
are no longer empty.

71
09:12.010 --> 09:13.150
All right

72
09:13.150 --> 09:14.390
now let's open

73
09:14.470 --> 09:23.330
show.blade.php file and find favorite

74
09:23.460 --> 09:24.490
here it is.

75
09:25.380 --> 09:31.610
Now we can change this static number with question

76
09:34.190 --> 09:34.890
favorites count.

77
09:40.370 --> 09:42.150
save that and let's see

78
09:53.010 --> 09:55.500
this question has not favorited by anyone

79
10:06.720 --> 10:07.530
It's also

80
10:15.620 --> 10:16.300
OK here

81
10:16.460 --> 10:20.440
This question provided by one user.

82
10:20.450 --> 10:20.900
Let's see

83
10:20.900 --> 10:22.040
another question.

84
10:32.850 --> 10:35.060
OK this question

85
10:35.210 --> 10:37.750
favorited by three users.

86
10:37.930 --> 10:38.800
Okay great

87
10:38.800 --> 10:44.600
now let's finally implement what we have been doing 
so far in one application and make this favorite button

88
10:44.650 --> 10:45.070
working.