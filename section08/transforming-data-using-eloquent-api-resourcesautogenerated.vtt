WEBVTT

0
00:01.410 --> 00:08.130
In this video we're going to be looking at eloquent 
API resource and see how to implement that in our

1
00:08.460 --> 00:10.690
API questions endpoint.

2
00:10.710 --> 00:12.060
So here in this structure

3
00:14.720 --> 00:18.830
we get almost all columns that we have in our questions table

4
00:22.070 --> 00:26.840
but actually we don't need all of them to get displayed in this endpoint.

5
00:26.960 --> 00:31.770
So we need to kind of transform this structure to the new one.

6
00:31.790 --> 00:36.140
And this how eloquent a resource come into play.

7
00:36.140 --> 00:43.730
So eloquent API resources basically is a mechanism to transform our eloquent model into json responses.

8
00:43.760 --> 00:51.140
It acts as a transformation layer that sits between our eloquent models and json responses that are

9
00:51.140 --> 00:55.050
actually returned to our application's users.

10
00:55.050 --> 01:01.300
Now before laravel version 5.5 you'll probably 
use third party package call fractal for

11
01:01.310 --> 01:08.630
data transformation. But start from version 5.5 laravel 
introduce eloquent API resource which does almost

12
01:08.630 --> 01:13.750
the same thing with fractal does but in the simple and elegant way.

13
01:13.850 --> 01:16.640
All right let's head over to our terminal

14
01:22.940 --> 01:23.560
then here

15
01:23.560 --> 01:30.730
Let's create a resource API by saying php artisan make:resource

16
01:31.400 --> 01:35.110
And here it's going to be question resource

17
01:39.880 --> 01:40.500
all right

18
01:40.680 --> 01:43.290
now let's open up the question resource

19
01:47.570 --> 01:48.090
then inside

20
01:48.190 --> 01:56.750
this file we'll find toArray method in this method we can specify which columns that we need to return.

21
01:57.260 --> 02:02.970
Now let's open up question excerpt

22
02:03.100 --> 02:08.840
blade php and let's see which columns that we need to expose

23
02:14.780 --> 02:21.680
so here we'll need to have votes count status answers count

24
02:26.160 --> 02:33.590
views and then URL title id

25
02:39.460 --> 02:44.230
user created date and excerpt.

26
02:45.760 --> 02:47.470
So let's go back to a question resource

27
02:51.580 --> 02:53.830
and inside here let's define that columns

28
02:59.670 --> 03:02.070
so here id

29
03:02.430 --> 03:06.660
array this id title

30
03:09.240 --> 03:16.580
this title. Note that the key and the 
value shouldn't always be the same.

31
03:16.650 --> 03:19.680
You could change the array key to any name if you like

32
03:19.680 --> 03:24.840
But in my case I'll use the same name so that I don't need to make a lot of changes in the frontend

33
03:24.840 --> 04:06.660
leter on. URL I think for the URL we can change to slug

34
04:06.780 --> 04:07.330
All right

35
04:07.350 --> 04:11.670
now we can head back to API questions controller

36
04:15.870 --> 04:19.310
import the question resource at the top here

37
04:32.140 --> 04:43.060
then instead this index method we can put 
this question variable inside question resource

38
04:43.420 --> 04:45.250
colon colon collection

39
04:49.710 --> 04:54.770
let's save all changes.

40
04:55.360 --> 05:00.070
Now we can head back to postmen and hit this endpoint again

41
05:04.400 --> 05:05.770
there we go

42
05:05.840 --> 05:10.120
Now we have an instructor that we can consume in the client.

43
05:10.340 --> 05:11.180
Let's see the user

44
05:15.030 --> 05:21.700
we still have unnecessary data. Here 
for the user we will need maybe id

45
05:21.760 --> 05:24.820
name url and avatar only.

46
05:24.880 --> 05:28.420
So let's create another resource head back to terminal

47
05:31.330 --> 05:39.970
and generate a brand new resource:
php artisan make:resource UserResource

48
05:44.460 --> 05:46.080
let's pull up the user resource

49
05:49.930 --> 05:55.090
then inside this toArray let's define 
the columns that we need to return

50
06:04.650 --> 06:05.360
id

51
06:09.660 --> 06:10.460
url

52
06:13.380 --> 06:18.950
name and avatar

53
06:19.080 --> 06:21.990
Now we can switch back to question resource

54
06:26.250 --> 06:32.580
and change the user's value with new user resource

55
06:36.650 --> 06:41.770
this user.

56
06:41.860 --> 06:47.680
So basically when you need to transform a single 
object into a json structure then you need to do

57
06:47.680 --> 06:48.700
this way.

58
06:48.760 --> 06:57.270
So just instantiate the resource class and pass the model instance into it. But if you need to transform

59
06:57.320 --> 07:05.950
a collection of models into a json structure 
then you will need this way.

60
07:06.330 --> 07:13.670
Just call the resource class followed by collection and pass the collection in. Let's save all changes

61
07:16.950 --> 07:27.450
Back to our postman and hit this endpoint one more time.

62
07:27.470 --> 07:33.900
Now we'll see the user only contains id, url, name and avatar. And I think

63
07:33.920 --> 07:37.730
now we have a better structure for this response.

64
07:37.790 --> 07:38.310
All right

65
07:38.320 --> 07:40.200
That's if for this lesson

66
07:40.280 --> 07:41.820
I'll see you in the next one.