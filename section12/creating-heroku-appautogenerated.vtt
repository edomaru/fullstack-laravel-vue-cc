WEBVTT

0
00:02.050 --> 00:07.530
Before creating Heroku app make sure 
that you're in your Laravel project.

1
00:07.570 --> 00:18.360
In my case I am in code Laravel laravel-qa. If you're 
using Visual Studio code editor and prefer to use

2
00:18.420 --> 00:19.610
integrated terminal

3
00:19.770 --> 00:20.910
then you're ready to go.

4
00:24.400 --> 00:28.050
Okay to create new Heroku application using heroku cli

5
00:28.060 --> 00:33.370
we can say heroku create followed by a unique name

6
00:33.370 --> 00:40.460
in my case I'll call it laravueqa and I hope this name is available.

7
00:43.720 --> 00:45.190
So I can use this name

8
00:45.190 --> 00:51.400
in this case. But if you're trying to enter the same 
name it will be failed because as I said the name

9
00:51.400 --> 00:56.280
should be unique and this name will be using 
as free domain name generated by Heroku.

10
00:57.220 --> 01:04.760
So as you can see here my applications domain 
is laravueqa  dot heroku app dot com.

11
01:04.760 --> 01:10.970
If you need to custom the domain you 
can check out this link for more information.

12
01:14.570 --> 01:20.070
The heroku create command also added 
new remote URL to our current directory.

13
01:20.070 --> 01:25.750
So if we type git remote -v and then hit return

14
01:25.890 --> 01:28.140
Now we'll find four remote URLs.

15
01:29.770 --> 01:36.490
Two URLs with name heroku are remote URLs added 
by heroku create command and are used to push

16
01:36.610 --> 01:45.520
or fetch our repository to Heroku. And two URLs with 
the name origin are remote URLs to push or fetch

17
01:45.790 --> 01:47.500
to our repository to github.

18
01:50.410 --> 01:53.090
Now before we actually push our code to Heroku

19
01:53.420 --> 01:59.280
let's do one more thing. We need to create 
a file called proc file. Before do that

20
01:59.300 --> 02:01.310
make sure you're in master branch

21
02:09.660 --> 02:10.430
and then here

22
02:10.470 --> 02:21.750
let's create the procfile by saying echo web colon vendor 
forward slash bin forward slahs heroku dash php

23
02:21.990 --> 02:31.250
dash apache two space public forward 
slash greater than symbol profile

24
02:34.270 --> 02:39.050
this command may only works in UNIX 
environment such as Mac or Linux.

25
02:39.250 --> 02:42.760
If you're using Windows this command might be not work.

26
02:42.820 --> 02:45.400
The alternative way is in your editor

27
02:48.740 --> 02:57.230
just create a new file called procfile and inside that file just write

28
02:57.580 --> 02:58.180
this command.

29
03:03.650 --> 03:10.610
So this command simply instruct Heroku to run our 
Laravel application by making use Apache web server

30
03:11.180 --> 03:17.450
and pointing the document root to public sub-directory 
because by default Heroku will launch our

31
03:17.450 --> 03:22.730
application from the root directory of our project.

32
03:22.790 --> 03:28.090
All right now let's commit our profile to our repo: git add Procfile

33
03:31.750 --> 03:43.360
and then git commit -m "Add Procfile for Heroku".

34
03:43.440 --> 03:45.110
Now let's push our code

35
03:45.110 --> 03:55.300
In this case our master branch to Heroku:  git push heroku master.

36
03:55.460 --> 03:59.210
This will take a few seconds or so 
depending on your internet speed.

37
04:06.750 --> 04:14.130
Once it done we can copy our application's URL and 
then paste in our browser. Or we can simply say

38
04:15.470 --> 04:23.790
heroku open. This command will open up our 
default browser and enter the application's URL

39
04:26.910 --> 04:28.270
here our app appears

40
04:28.320 --> 04:30.480
but it shows us an error message.

41
04:30.480 --> 04:31.200
Don't worry

42
04:31.200 --> 04:34.390
I think this is a good progress. In the following lessons

43
04:34.440 --> 04:37.890
We'll do a couple of things to make our application really working.