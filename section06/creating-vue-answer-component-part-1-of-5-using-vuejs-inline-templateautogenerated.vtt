WEBVTT

0
00:02.500 --> 00:03.380
In the last lesson

1
00:03.420 --> 00:05.760
We've created our first vue js component

2
00:06.080 --> 00:08.650
registered it in vue component syntax

3
00:09.760 --> 00:18.570
and call it in show.blade.php and _answer.blade.php 
file. So component basically is

4
00:18.570 --> 00:21.970
a piece of code that can reuse throughout the application.

5
00:22.830 --> 00:27.890
Now in this lesson we are going to create another 
vue component that represent an answer.

6
00:28.000 --> 00:34.030
This component might be more complex than our first one 
because this component will change how the answers

7
00:34.060 --> 00:35.210
behave.

8
00:35.230 --> 00:38.940
So in every single answer we will 
show the answer body by default.

9
00:39.070 --> 00:47.560
And when we click the edit button instead of showing the 
edit answer form in other page we will show in inline form

10
00:48.390 --> 00:51.560
and we will implement AJAX to persist the change.

11
00:51.580 --> 00:59.370
So this lesson could be divided into three parts or more.

12
00:59.390 --> 01:02.740
All right before we move on let's switch over to our terminal

13
01:08.900 --> 01:20.400
and create a new branch to isolate our work.

14
01:20.410 --> 01:26.370
Now let's go to the _answer.blade.php

15
01:26.570 --> 01:35.050
And here we have can update answer and can delete 
answer which basically checked if the current user

16
01:35.210 --> 01:36.850
authorized to update or delete

17
01:36.920 --> 01:44.250
answer. That means we also need to think how to make 
this authorization working when we rewrite all of these

18
01:44.290 --> 01:46.060
into vue js component.

19
01:48.000 --> 01:51.440
Later we will rewrite the authorization logic into javascript.

20
01:51.510 --> 01:56.490
But for now the temporary solution is to utilize vue js inline template.

21
01:56.580 --> 02:01.640
This allows us to mix our php and javascript logic in a component.

22
02:01.690 --> 02:04.750
So let's see how to do that.

23
02:04.810 --> 02:11.160
Let's go to assets js components and here let's create a new file.

24
02:15.310 --> 02:22.510
Let's call it  answer.vue

25
02:22.580 --> 02:24.710
For now we only need to define script tag

26
02:29.050 --> 02:31.950
and inside here we only define props property.

27
02:34.560 --> 02:37.830
and it contains answer.

28
02:40.790 --> 02:44.030
Next let's register this component globally in app.js.

29
02:50.230 --> 02:51.370
Duplicate this line

30
02:55.000 --> 03:04.860
change the component name to answer and 
then change the pathname to components

31
03:05.840 --> 03:07.110
Answer.vue

32
03:09.600 --> 03:12.420
Now we can switch to _answer.blade.php

33
03:19.410 --> 03:21.830
and wrap everything inside answer tag

34
03:38.800 --> 03:41.670
pass in the answer instance through answer attribute

35
03:53.190 --> 03:56.970
and here we need to tell vue js that 
this component is inline template

36
04:04.000 --> 04:07.720
So by doing this we keep our php logic inside our markup.

37
04:08.050 --> 04:13.900
And if we need to add other logics in client side to make 
our  component more interactive then we can

38
04:13.900 --> 04:20.700
write the code in answer.vue. Alright 
let's  save all changes and have a look.

39
04:20.910 --> 04:22.350
Don't forget to run webpack

40
04:22.380 --> 04:24.900
throught npm run watch to bundle our code

41
04:40.550 --> 04:44.960
again we'll not see any difference but if we open vue dev tools

42
04:52.650 --> 04:58.770
here we'll see the answer components below root 
component  and inside answer component

43
05:02.100 --> 05:03.990
we'll find user info component.